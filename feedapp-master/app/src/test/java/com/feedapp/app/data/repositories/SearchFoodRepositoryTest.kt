/* * Copyright (c) 2020 Ruslan Potekhin */package com.feedapp.app.data.repositoriesimport android.os.Buildimport androidx.test.platform.app.InstrumentationRegistryimport com.feedapp.app.data.databases.daos.FoodProductDaoimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.launchimport org.junit.Testimport org.junit.runner.RunWithimport org.robolectric.RobolectricTestRunnerimport org.robolectric.annotation.Configimport java.util.*@RunWith(RobolectricTestRunner::class)@Config(sdk = [Build.VERSION_CODES.O_MR1])internal class SearchFoodRepositoryTest {    @Test    fun testAll() {        CoroutineScope(Dispatchers.IO).launch {            val foodProductDao: FoodProductDao =                com.feedapp.app.data.databases.dbclasses.FoodDatabase.invoke(                    InstrumentationRegistry.getInstrumentation().targetContext                ).getProductDao()            testSuggestions(foodProductDao)        }    }    private fun testSuggestions(foodProductDao: FoodProductDao) {        val map = HashMap<String, String>()        map["Mea"] = "meat"        map["App"] = "apple"        map["wat"] = "water"        map["lem"] = "lemon"        map["oran"] = "orange"        map["lem"] = "lemon"        getSearchSuggestions(foodProductDao, map)    }    /**     * test returning relevant product's names from offline DB     */    private fun getSearchSuggestions(        foodProductDao: FoodProductDao,        suggestion: HashMap<String, String>    ) {        suggestion.forEach { (k, v) ->            var list = foodProductDao.searchBySuggestion(k)                ?.sortedWith(compareBy { it.length })            val size = list?.size            size?.let {                if (size > 5) {                    list = list?.subList(0, 5)                }                list?.let { ll ->                    assert(ll.any {                        println("$v       $it")                        v.toLowerCase() in it.toLowerCase()                    })                }            }        }    }}
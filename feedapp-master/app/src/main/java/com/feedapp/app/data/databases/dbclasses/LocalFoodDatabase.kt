/* * Copyright (c) 2020 Ruslan Potekhin */package com.feedapp.app.data.databases.dbclassesimport android.content.Contextimport androidx.room.Databaseimport androidx.room.Roomimport androidx.room.RoomDatabaseimport com.feedapp.app.data.databases.daos.LocalProductRuDaoimport com.feedapp.app.data.models.localdb.FoodProductRuimport java.io.File@Database(entities = [FoodProductRu::class], version = 1, exportSchema = false)abstract class LocalFoodDatabase() : RoomDatabase() {    abstract fun getLocalProductDao(): LocalProductRuDao    companion object {        private const val FOOD_DATABASE_NAME = "localFoodProducts"        @Volatile        private var instance: LocalFoodDatabase? = null        private val LOCK = Any()        operator fun invoke(context: Context, file: File) = instance            ?: synchronized(LOCK) {                instance                    ?: buildDatabase(                        context, file                    ).also { instance = it }            }        private fun buildDatabase(context: Context, file: File) = Room            .databaseBuilder(                context.applicationContext,                LocalFoodDatabase::class.java,                FOOD_DATABASE_NAME            )            .createFromFile(file)            .build()    }}
/* * Copyright (c) 2020 Ruslan Potekhin */package com.feedapp.app.data.models.localdbimport android.annotation.SuppressLintimport android.content.Contextimport com.feedapp.app.data.databases.daos.LocalProductRuDaoimport com.feedapp.app.data.databases.dbclasses.LocalFoodDatabaseimport java.io.File/** * Using vanilla injection because of different locales */object LocalInjectorUtils {    fun provideRepository(context: Context, file: File): LocalFoodDelegate<FoodProductRu> {        val dao = provideLocalFoodDao(context, file)        return LocalFoodDelegate(dao)    }    private fun provideLocalFoodDao(context: Context, file: File): LocalProductRuDao {        val db = LocalFoodDatabase.invoke(context, file)        return db.getLocalProductDao()    }}object LocalDBUrls {    fun getURLByCode(code: String): String? {        return when (code) {            "RU" -> URL_DB_RU            else -> null        }    }    const val URL_DB_RU = "https://storage.googleapis.com/feedapp-app-global/food_RU.db"}object LocalDBUris {    @SuppressLint("DefaultLocale")    fun getDBPath(cacheDirPath: String, countryCode: String): String {        return "$cacheDirPath/food_${countryCode.toLowerCase()}.db"    }}// catch from server in futureenum class LocalDBSAvailable {    RU}
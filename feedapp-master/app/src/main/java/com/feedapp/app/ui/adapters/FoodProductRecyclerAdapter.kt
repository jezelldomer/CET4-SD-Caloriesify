/* * Copyright (c) 2020 Ruslan Potekhin */package com.feedapp.app.ui.adaptersimport android.content.Contextimport android.graphics.Colorimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport com.feedapp.app.Rimport com.feedapp.app.data.models.localdb.IProductimport com.feedapp.app.ui.viewholders.MealViewHolderimport com.feedapp.app.util.getValidLetterclass FoodProductRecyclerAdapter(    val context: Context,    private val searchResult: ((IProduct) -> Unit)) :    ListAdapter<IProduct, MealViewHolder>(DIFF_CALLBACK) {    var colorList: MutableList<Int> = arrayListOf()    companion object {        val defaultColor = Color.rgb(253, 245, 230)        val DIFF_CALLBACK = object : DiffUtil.ItemCallback<IProduct>() {            override fun areItemsTheSame(oldItem: IProduct, newItem: IProduct): Boolean {                return oldItem.id == newItem.id            }            override fun areContentsTheSame(oldItem: IProduct, newItem: IProduct): Boolean {                return false            }        }    }    override fun onBindViewHolder(holder: MealViewHolder, position: Int) {        val food = getItem(position)        holder.textTitle.text = food.name        holder.mainLayout.setOnClickListener {            searchResult.invoke(food)        }        // set Color to image        try {            holder.image.setColorFilter(colorList[position])            // set Letter into imageView            val letter = food.name.getOrNull(0).toString().getValidLetter()            holder.imageLetter.text = letter        } catch (e: IndexOutOfBoundsException) {            e.printStackTrace()            holder.image.setColorFilter(defaultColor)        }    }    override fun onCreateViewHolder(        parent: ViewGroup,        viewType: Int    ): MealViewHolder {        val holder = LayoutInflater.from(parent.context)            .inflate(R.layout.vh_meal_api, parent, false)        return MealViewHolder(holder)    }}
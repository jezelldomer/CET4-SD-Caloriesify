// Generated by data binding compiler. Do not edit!
package com.front_end.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.front_end.app.R;
import com.front_end.app.modules.under.data.viewmodel.UnderVM;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityUnderBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton btnBack;

  @NonNull
  public final AppCompatButton btnDetails;

  @NonNull
  public final FrameLayout frameStackellipseten;

  @NonNull
  public final LinearLayout linearMainEclipse;

  @NonNull
  public final LinearLayout linearUnder;

  @NonNull
  public final TextView txtOverweight;

  @NonNull
  public final TextView txtYouhaveNormal;

  @NonNull
  public final View viewEllipseTen;

  @Bindable
  protected UnderVM mUnderVM;

  protected ActivityUnderBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatButton btnBack, AppCompatButton btnDetails, FrameLayout frameStackellipseten,
      LinearLayout linearMainEclipse, LinearLayout linearUnder, TextView txtOverweight,
      TextView txtYouhaveNormal, View viewEllipseTen) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnBack = btnBack;
    this.btnDetails = btnDetails;
    this.frameStackellipseten = frameStackellipseten;
    this.linearMainEclipse = linearMainEclipse;
    this.linearUnder = linearUnder;
    this.txtOverweight = txtOverweight;
    this.txtYouhaveNormal = txtYouhaveNormal;
    this.viewEllipseTen = viewEllipseTen;
  }

  public abstract void setUnderVM(@Nullable UnderVM underVM);

  @Nullable
  public UnderVM getUnderVM() {
    return mUnderVM;
  }

  @NonNull
  public static ActivityUnderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_under, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityUnderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityUnderBinding>inflateInternal(inflater, R.layout.activity_under, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityUnderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_under, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityUnderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityUnderBinding>inflateInternal(inflater, R.layout.activity_under, null, false, component);
  }

  public static ActivityUnderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityUnderBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityUnderBinding)bind(component, view, R.layout.activity_under);
  }
}

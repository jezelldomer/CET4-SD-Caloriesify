// Generated by data binding compiler. Do not edit!
package com.front_end.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.front_end.app.R;
import com.front_end.app.modules.lunch.data.model.LunchRowModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RowLunchBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imageUntitleddesignOne;

  @NonNull
  public final LinearLayout linearColumndinner;

  @NonNull
  public final LinearLayout linearRowdinner;

  @NonNull
  public final LinearLayout linearRowuntitleddesignOne;

  @NonNull
  public final TextView txtDinner;

  @NonNull
  public final TextView txtGroupFortyOneOne;

  @NonNull
  public final TextView txtRecommended535One;

  @Bindable
  protected LunchRowModel mLunchRowModel;

  protected RowLunchBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imageUntitleddesignOne, LinearLayout linearColumndinner,
      LinearLayout linearRowdinner, LinearLayout linearRowuntitleddesignOne, TextView txtDinner,
      TextView txtGroupFortyOneOne, TextView txtRecommended535One) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imageUntitleddesignOne = imageUntitleddesignOne;
    this.linearColumndinner = linearColumndinner;
    this.linearRowdinner = linearRowdinner;
    this.linearRowuntitleddesignOne = linearRowuntitleddesignOne;
    this.txtDinner = txtDinner;
    this.txtGroupFortyOneOne = txtGroupFortyOneOne;
    this.txtRecommended535One = txtRecommended535One;
  }

  public abstract void setLunchRowModel(@Nullable LunchRowModel lunchRowModel);

  @Nullable
  public LunchRowModel getLunchRowModel() {
    return mLunchRowModel;
  }

  @NonNull
  public static RowLunchBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_lunch, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RowLunchBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RowLunchBinding>inflateInternal(inflater, R.layout.row_lunch, root, attachToRoot, component);
  }

  @NonNull
  public static RowLunchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_lunch, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RowLunchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RowLunchBinding>inflateInternal(inflater, R.layout.row_lunch, null, false, component);
  }

  public static RowLunchBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RowLunchBinding bind(@NonNull View view, @Nullable Object component) {
    return (RowLunchBinding)bind(component, view, R.layout.row_lunch);
  }
}
